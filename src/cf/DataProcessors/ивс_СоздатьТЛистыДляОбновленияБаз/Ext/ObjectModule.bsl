Процедура ЗаполнитьИСформироватьТЛисты(ДатаМесяц) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаМесяц) Тогда
		ДатаМесяц = ТекущаяДата();
	КонецЕсли;
	
	КатегорияОбновления = Справочники.Категории.НайтиПоНаименованию("Обновление релизов");
	ПостановщикОбновления = Справочники.Пользователи.НайтиПоНаименованию("Дорин Дмитрий");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	БД.Владелец КАК Заказчик,
	                      |	БД.Ссылка КАК БазаДанных,
	                      |	ЗаданиеОбновленныеБазы.Ссылка КАК ДокументОбновления
	                      |ИЗ
	                      |	Справочник.БазаДанных КАК БД
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Задание.ОбновленныеБазы КАК ЗаданиеОбновленныеБазы
	                      |		ПО БД.Ссылка = ЗаданиеОбновленныеБазы.БазаДанных
	                      |			И (НАЧАЛОПЕРИОДА(&ДатаОбновления, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЗаданиеОбновленныеБазы.Ссылка.Дата, МЕСЯЦ))
	                      |			И БД.Владелец = ЗаданиеОбновленныеБазы.Ссылка.Заказчик
	                      |ГДЕ
	                      |	БД.Обновляется
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЗаданиеОбновленныеБазы.Ссылка,
	                      |	БД.Ссылка,
	                      |	БД.Владелец");
	
	Запрос.УстановитьПараметр("ДатаОбновления", ДатаМесяц);
	ТаблицаОбновления = Запрос.Выполнить().Выгрузить();
	ТаблицаЗаказчиков = ТаблицаОбновления.Скопировать();
	ТаблицаЗаказчиков.Свернуть("Заказчик");
	
	Для Каждого Стр Из ТаблицаЗаказчиков Цикл
		СтрПоиска = ТаблицаОбновления.НайтиСтроки(Новый Структура("Заказчик", Стр.Заказчик));
		
		ДокументОбъект = Неопределено;
		
		Для Каждого СтрОбновления Из СтрПоиска Цикл
			Если ЗначениеЗаполнено(СтрОбновления.БазаДанных.Ответственный) Тогда
				ОтветственныйОбновление = СтрОбновления.БазаДанных.Ответственный;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрОбновления.БазаДанных.Конфигурация) Тогда
				КонфигурацияОбновление = СтрОбновления.БазаДанных.Конфигурация;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрОбновления.ДокументОбновления) Тогда
				ДокументОбъект = СтрОбновления.ДокументОбновления.ПолучитьОбъект();
			КонецЕсли;
		КонецЦикла;
		Если ДокументОбъект = Неопределено Тогда
			ДокументОбъект = Документы.Задание.СоздатьДокумент();
		Иначе
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект.Дата = ТекущаяДата(); 
		ДокументОбъект.Тема = "Обновление баз за период: " + Формат(ДатаМесяц, "ДФ='ММММ гггг'") + ". Клиент: " + Стр.Заказчик.Наименование;
		ДокументОбъект.ТекстЗадания = ДокументОбъект.Тема;
		ДокументОбъект.Проект = Стр.Заказчик.ПроектДляОбновления;
		ДокументОбъект.Заказчик = Стр.Заказчик;
		ДокументОбъект.Категория = КатегорияОбновления;
		ДокументОбъект.Постановщик = ПостановщикОбновления;
		ДокументОбъект.ОтветственныйИсполнитель = ОтветственныйОбновление;
		ДокументОбъект.Статус = Перечисления.Статус.Новое;
		ДокументОбъект.Срочность = Перечисления.Срочность.Средняя;	
		ДокументОбъект.Конфигурация = КонфигурацияОбновление;
		ДокументОбъект.Комментарий = "Т-лист создан обработкой генирации: " + Формат(ТекущаяДата(), "ДЛФ=DDT")+ ". Обновление требуется произвести после 20го числа";
		ДокументОбъект.Обновление = Истина;
		ДокументОбъект.НачалоПлан = ДокументОбъект.Дата ;
		ДокументОбъект.ОкончаниеПлан = КонецМесяца(ДокументОбъект.Дата);
		//ДокументОбъект.ПлановыеТрудозатраты = 1;
		
		ДокументОбъект.ОбновленныеБазы.Очистить();
		Для Каждого СтрОбновления Из СтрПоиска Цикл
			Н_стр = ДокументОбъект.ОбновленныеБазы.Добавить();
			Н_стр.БазаДанных = СтрОбновления.БазаДанных;
			Н_стр.Конфигурация = СтрОбновления.БазаДанных.Конфигурация;
		КонецЦикла;
		
		ДокументОбъект.СписокИсполнителей.Очистить();
		Для Каждого СтрОбновления Из СтрПоиска Цикл
			Если ЗначениеЗаполнено(СтрОбновления.БазаДанных.Ответственный) Тогда
				Н_Стр = ДокументОбъект.СписокИсполнителей.Добавить();
				Н_стр.Исполнитель = СтрОбновления.БазаДанных.Ответственный;
			КонецЕсли;
		КонецЦикла;
		
		ДокументОбъект.Записать();
	КонецЦикла;
	
	
КонецПроцедуры

