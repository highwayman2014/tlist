
&НаКлиенте
Процедура ВыполнитьОтчет(Команда)
    ВыполнитьОтчетНаСервере(тд);
    //тд.Показать();
КонецПроцедуры


&НаСервере
Процедура ВыполнитьОтчетНаСервере(тд)
    
    //тд = новый ТабличныйДокумент;
    
    тд.Очистить();
    
    //СтрПериод = Формат(Отчет.НачалоПериода, "ДФ=dd.MM.yy")+" - "+Формат(Отчет.КонецПериода, "ДФ=dd.MM.yy"); 
    
    СписокПроектов = Новый СписокЗначений;
    //Для каждого Строка Из Отчет.Проекты Цикл
    //    СписокПроектов.Добавить(Строка.Проект);
    //КонецЦикла; 
    Для каждого Строка Из Проекты Цикл
        СписокПроектов.Добавить(Строка.Значение);
    КонецЦикла; 
    
    макет = РеквизитФормыВЗначение("Отчет").получитьМакет("Макет1");
    облЗаголовок = макет.ПолучитьОбласть("Заголовок");
    облСтрока = макет.ПолучитьОбласть("Строка");
    облПодвал = макет.ПолучитьОбласть("Подвал");
    
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |    Задание.Ссылка КАК Задание,
                   |    Задание.ТекстЗадания,
                   |    Задание.Дата,
                   |    Задание.НачалоПлан,
                   |    Задание.ОкончаниеПлан,
                   |    Задание.ВремяПлан,
                   |    Задание.НачалоФакт,
                   |    Задание.ОкончаниеФакт,
                   |    Задание.ВремяФакт КАК ВремяФактИзЗадания,
                   |    Задание.ДатаПриемки,
                   |    Задание.СписокИсполнителей.(
                   |        Исполнитель
                   |    ),
                   |    Задание.Проект,
                   |    Задание.Номер,
                   |    Задание.ТрудозатратыИсполнителей.(
                   |        Исполнитель,
                   |        ЗатраченноеВремя,
                   |        Комментарий,
                   |        Дата
                   |    ),
                   |    Задание.Категория
                   |ИЗ
                   |    Документ.Задание КАК Задание
                   |ГДЕ
                   |    Задание.Статус = &СтатусПринято
                   |    И Задание.ДатаПриемки МЕЖДУ &НачалоПериода И &КонецПериода
                   |    И Задание.Проект В(&Проекты)
                   |    И Задание.Категория В(&Категории)";
                   //|    ВЫБОР
                   //|        КОГДА Задание.ВремяПлан < Задание.ВремяФакт
                   //|            ТОГДА Задание.ВремяПлан
                   //|        ИНАЧЕ Задание.ВремяФакт
                   //|    КОНЕЦ КАК МинимальноеВремя,
    
    Запрос.УстановитьПараметр("СтатусПринято",перечисления.Статус.Принято);				
    //Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(Отчет.НачалоПериода));				
    //Запрос.УстановитьПараметр("КонецПериода",КонецДня(Отчет.КонецПериода));	
    Запрос.УстановитьПараметр("НачалоПериода",Период.ДатаНачала);				
    Запрос.УстановитьПараметр("КонецПериода",Период.ДатаОкончания);	
    Запрос.УстановитьПараметр("Проекты",СписокПроектов);
    Запрос.УстановитьПараметр("Категории",Категории);
    
    Если СписокПроектов.Количество()=0 Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Задание.Проект В(&Проекты)", "");
    КонецЕсли; 
    
    Если Категории.Количество()=0 Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Задание.Категория В(&Категории)", "");
    КонецЕсли; 
    
    выборка = Запрос.Выполнить().Выбрать();
    тд.вывести(облЗаголовок);
    
    ИтогоВремяПлан = 0;
    ИтогоВремяФакт = 0;
    ИтогоМинимальноеВремя = 0;
    пока выборка.Следующий() цикл
        
        ВремяПлан = выборка.ВремяПлан;
        
        тчИсполнители = выборка.СписокИсполнителей.выбрать();
        СтрокаИсполнители = "";
        НеНайденИсполнитель = Истина;
        пока тчИсполнители.следующий() цикл
            
            СтрокаИсполнители = СтрокаИсполнители+?(СтрокаИсполнители = "","",символы.ПС)+тчИсполнители.Исполнитель; // Показываются все исполнители по задаче 
            
            НайденныеИсполнители = Исполнители.НайтиПоЗначению(тчИсполнители.Исполнитель);
            Если НайденныеИсполнители <> Неопределено Тогда
                НеНайденИсполнитель = Ложь;
            КонецЕсли; 
            
        КонецЦикла;
        Если Исполнители.Количество()>0 И НеНайденИсполнитель Тогда // Если список Исполнителей пустой - обязательно показываем задание в отчете
        	Продолжить;
        КонецЕсли; 
        
        ТекстЗаданияПолный = выборка.ТекстЗадания;
        мТрудозатратыИсполнителейРасчетные = 0;
        
        тчТрудозатраты = выборка.ТрудозатратыИсполнителей.выбрать();
        Пока тчТрудозатраты.Следующий() Цикл
			Если Исполнители.Количество()=0 Тогда
				// Если по всем исполнителям
				мТрудозатратыИсполнителейРасчетные = мТрудозатратыИсполнителейРасчетные + тчТрудозатраты.ЗатраченноеВремя;
				мКомментарий = СокрЛП(тчТрудозатраты.Комментарий);
				Если мКомментарий <> "" Тогда
					ТекстЗаданияПолный = ТекстЗаданияПолный + "; "+мКомментарий;
				КонецЕсли; 
			Иначе	
				НайденныеИсполнители = Исполнители.НайтиПоЗначению(тчТрудозатраты.Исполнитель);
				Если НайденныеИсполнители <> Неопределено Тогда
					
					мТрудозатратыИсполнителейРасчетные = мТрудозатратыИсполнителейРасчетные + тчТрудозатраты.ЗатраченноеВремя;
					
					мКомментарий = СокрЛП(тчТрудозатраты.Комментарий);
					Если мКомментарий <> "" Тогда
						ТекстЗаданияПолный = ТекстЗаданияПолный + "; "+мКомментарий;
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 
        КонецЦикла; 
        
        КоэффициентПересчета = мТрудозатратыИсполнителейРасчетные/выборка.ВремяФактИзЗадания; // Это доля фильтра условия из общего времени
        
        Если Исполнители.Количество()>0 Тогда
            ВремяФакт = мТрудозатратыИсполнителейРасчетные;
        Иначе
            ВремяФакт = выборка.ВремяФактИзЗадания;
        КонецЕсли;
        
        //Если ВремяФакт < ВремяПлан Тогда
        //    МинимальноеВремя = ВремяФакт;
        //Иначе
        //    МинимальноеВремя = ВремяПлан;
        //КонецЕсли; 
        
        Если выборка.ВремяФактИзЗадания < ВремяПлан Тогда
            МинимальноеВремя = выборка.ВремяФактИзЗадания;
        Иначе
            МинимальноеВремя = ВремяПлан;
        КонецЕсли; 
        
        МинимальноеВремя = МинимальноеВремя * КоэффициентПересчета;
        
        облСтрока.Параметры.Заполнить(выборка);
        облСтрока.Параметры.Исполнители = СтрокаИсполнители;
        облСтрока.Параметры.Период = Период;
        облСтрока.Параметры.ВремяФакт = ВремяФакт;
        облСтрока.Параметры.МинимальноеВремя = МинимальноеВремя;
        облСтрока.Параметры.ТекстЗаданияПолный = ТекстЗаданияПолный;
        тд.вывести(облСтрока);
        
        ИтогоВремяПлан = ИтогоВремяПлан + ВремяПлан;
        ИтогоВремяФакт = ИтогоВремяФакт + ВремяФакт;
        ИтогоМинимальноеВремя = ИтогоМинимальноеВремя + МинимальноеВремя;
    КонецЦикла;
    
    облПодвал.параметры.ИтогоВремяПлан = ИтогоВремяПлан; 
    облПодвал.параметры.ИтогоВремяФакт = ИтогоВремяФакт; 
    облПодвал.параметры.ИтогоМинимальноеВремя = ИтогоМинимальноеВремя; 
    тд.вывести(облПодвал);
    
    тд.толькоПросмотр = Истина;	
    тд.ОтображатьЗаголовки=Ложь;
    тд.ОтображатьСетку=Ложь;
    тд.ФиксацияСверху = 5;
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    ВосстановитьСохраненныеЗначения();
    Предупреждение("Это старый отчет с ошибками при Отборах по Исполнителям. Рекомендуется пользоваться новым отчетом!");
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
    СохранитьЗначения();
КонецПроцедуры

&НаСервере
Процедура ВосстановитьСохраненныеЗначения()
    //Попытка
    //    Отчет.Проекты.Загрузить(ХранилищеСистемныхНастроек.Загрузить("ОтчетВыполненияРабот_Проекты"));
    //Исключение
    //КонецПопытки; 
    //Попытка
    //    Отчет.Исполнители.Загрузить(ХранилищеСистемныхНастроек.Загрузить("ОтчетВыполненияРабот_Исполнители"));
    //Исключение
    //КонецПопытки; 
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначения()
    //ХранилищеСистемныхНастроек.Сохранить("ОтчетВыполненияРабот_Проекты",, Отчет.Проекты.Выгрузить());
    //ХранилищеСистемныхНастроек.Сохранить("ОтчетВыполненияРабот_Исполнители",, Отчет.Исполнители.Выгрузить());
КонецПроцедуры
